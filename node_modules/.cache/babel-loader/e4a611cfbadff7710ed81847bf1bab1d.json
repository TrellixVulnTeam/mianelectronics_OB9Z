{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItemsToCart: (state, {\n      payload\n    }) => {\n      const existingItemIndex = state.cartItems.findIndex(cartItem => cartItem.title === payload.title);\n\n      if (existingItemIndex !== -1) {\n        const prevQuantity = state.cartItems[existingItemIndex].quantity;\n        const newQuantity = prevQuantity + 1;\n        state.cartItems[existingItemIndex].quantity = newQuantity;\n      } else {\n        state.cartItems.push(payload);\n      }\n    },\n    reduceItemQuantity: (state, {\n      payload\n    }) => {\n      const existingItemIndex = state.cartItems.findIndex(cartItem => cartItem.title === payload.title);\n\n      if (existingItemIndex !== -1) {\n        const prevQuantity = state.cartItems[existingItemIndex].quantity;\n        const newQuantity = prevQuantity - 1;\n        state.cartItems[existingItemIndex].quantity = newQuantity;\n      }\n    },\n    removeItem: (state, {\n      payload\n    }) => {\n      if (state.cartItems.length <= 1) {\n        state.cartItems = [];\n      }\n\n      const newArr = state.cartItems.filter(cartItem => cartItem.title !== payload.title);\n      state.cartItems = [...newArr];\n    }\n  }\n});\nexport const {\n  addItemsToCart,\n  reduceItemQuantity,\n  removeItem\n} = cartSlice.actions;\nexport const selectCartItems = state => state.cart.cartItems;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/home/zeeshan/Projects/src/store/cartSlice.js"],"names":["createSlice","initialState","cartItems","cartSlice","name","reducers","addItemsToCart","state","payload","existingItemIndex","findIndex","cartItem","title","prevQuantity","quantity","newQuantity","push","reduceItemQuantity","removeItem","length","newArr","filter","actions","selectCartItems","cart","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIA,MAAMC,SAAS,GAAGH,WAAW,CAAC;AAC5BI,EAAAA,IAAI,EAAE,MADsB;AAE5BH,EAAAA,YAF4B;AAG5BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtC,YAAMC,iBAAiB,GAAGF,KAAK,CAACL,SAAN,CAAgBQ,SAAhB,CACxBC,QAAQ,IAAIA,QAAQ,CAACC,KAAT,KAAmBJ,OAAO,CAACI,KADf,CAA1B;;AAIA,UAAIH,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC5B,cAAMI,YAAY,GAAGN,KAAK,CAACL,SAAN,CAAgBO,iBAAhB,EAAmCK,QAAxD;AACA,cAAMC,WAAW,GAAGF,YAAY,GAAG,CAAnC;AACAN,QAAAA,KAAK,CAACL,SAAN,CAAgBO,iBAAhB,EAAmCK,QAAnC,GAA8CC,WAA9C;AACD,OAJD,MAIO;AACLR,QAAAA,KAAK,CAACL,SAAN,CAAgBc,IAAhB,CAAqBR,OAArB;AACD;AACF,KAbO;AAcRS,IAAAA,kBAAkB,EAAE,CAACV,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAC1C,YAAMC,iBAAiB,GAAGF,KAAK,CAACL,SAAN,CAAgBQ,SAAhB,CACxBC,QAAQ,IAAIA,QAAQ,CAACC,KAAT,KAAmBJ,OAAO,CAACI,KADf,CAA1B;;AAIA,UAAIH,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC5B,cAAMI,YAAY,GAAGN,KAAK,CAACL,SAAN,CAAgBO,iBAAhB,EAAmCK,QAAxD;AACA,cAAMC,WAAW,GAAGF,YAAY,GAAG,CAAnC;AACAN,QAAAA,KAAK,CAACL,SAAN,CAAgBO,iBAAhB,EAAmCK,QAAnC,GAA8CC,WAA9C;AACD;AACF,KAxBO;AAyBRG,IAAAA,UAAU,EAAE,CAACX,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAClC,UAAID,KAAK,CAACL,SAAN,CAAgBiB,MAAhB,IAA0B,CAA9B,EAAiC;AAC/BZ,QAAAA,KAAK,CAACL,SAAN,GAAkB,EAAlB;AACD;;AACD,YAAMkB,MAAM,GAAGb,KAAK,CAACL,SAAN,CAAgBmB,MAAhB,CACbV,QAAQ,IAAIA,QAAQ,CAACC,KAAT,KAAmBJ,OAAO,CAACI,KAD1B,CAAf;AAIAL,MAAAA,KAAK,CAACL,SAAN,GAAkB,CAAC,GAAGkB,MAAJ,CAAlB;AACD;AAlCO;AAHkB,CAAD,CAA7B;AAyCA,OAAO,MAAM;AACXd,EAAAA,cADW;AAEXW,EAAAA,kBAFW;AAGXC,EAAAA;AAHW,IAITf,SAAS,CAACmB,OAJP;AAKP,OAAO,MAAMC,eAAe,GAAGhB,KAAK,IAAIA,KAAK,CAACiB,IAAN,CAAWtB,SAA5C;AACP,eAAeC,SAAS,CAACsB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addItemsToCart: (state, { payload }) => {\r\n      const existingItemIndex = state.cartItems.findIndex(\r\n        cartItem => cartItem.title === payload.title\r\n      );\r\n\r\n      if (existingItemIndex !== -1) {\r\n        const prevQuantity = state.cartItems[existingItemIndex].quantity;\r\n        const newQuantity = prevQuantity + 1;\r\n        state.cartItems[existingItemIndex].quantity = newQuantity;\r\n      } else {\r\n        state.cartItems.push(payload);\r\n      }\r\n    },\r\n    reduceItemQuantity: (state, { payload }) => {\r\n      const existingItemIndex = state.cartItems.findIndex(\r\n        cartItem => cartItem.title === payload.title\r\n      );\r\n\r\n      if (existingItemIndex !== -1) {\r\n        const prevQuantity = state.cartItems[existingItemIndex].quantity;\r\n        const newQuantity = prevQuantity - 1;\r\n        state.cartItems[existingItemIndex].quantity = newQuantity;\r\n      }\r\n    },\r\n    removeItem: (state, { payload }) => {\r\n      if (state.cartItems.length <= 1) {\r\n        state.cartItems = [];\r\n      }\r\n      const newArr = state.cartItems.filter(\r\n        cartItem => cartItem.title !== payload.title\r\n      );\r\n\r\n      state.cartItems = [...newArr];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addItemsToCart,\r\n  reduceItemQuantity,\r\n  removeItem,\r\n} = cartSlice.actions;\r\nexport const selectCartItems = state => state.cart.cartItems;\r\nexport default cartSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}